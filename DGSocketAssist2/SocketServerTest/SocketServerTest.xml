<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SocketServerTest</name>
    </assembly>
    <members>
        <member name="T:SocketServerTest.MessageEventArgs">
            <summary>
            메시지 이벤트용 형식입니다.
            </summary>
        </member>
        <member name="F:SocketServerTest.MessageEventArgs.m_strMsg">
            <summary>
            메시지
            </summary>
        </member>
        <member name="F:SocketServerTest.MessageEventArgs.m_typeCommand">
            <summary>
            메시지 타입
            </summary>
        </member>
        <member name="M:SocketServerTest.MessageEventArgs.#ctor(System.String,ChatGlobal.ChatCommandType)">
            <summary>
            메시지 설정
            </summary>
            <param name="strMsg"></param>
            <param name="typeCommand"></param>
        </member>
        <member name="T:SocketServerTest.ServerForm">
            <summary>
            서버 UI
            </summary>
        </member>
        <member name="F:SocketServerTest.ServerForm.m_listUser">
            <summary>
            접속한 유저 리스트(로그인 완료전 포함)
            </summary>
        </member>
        <member name="M:SocketServerTest.ServerForm.UserList_Add(DGSocketAssist2_Server.ClientListener)">
            <summary>
            접속 허가된 유저를 리스트에서 추가한다.
            </summary>
            <param name="sender"></param>
        </member>
        <member name="M:SocketServerTest.ServerForm.UserList_Remove(DGSocketAssist2_Server.ClientListener)">
            <summary>
            리스너로 유저를 찾아 리스트에서 제거한다.
            </summary>
            <param name="sender"></param>
        </member>
        <member name="M:SocketServerTest.ServerForm.UserList_Remove(SocketServerTest.User)">
            <summary>
            유저를 리스트에서 제거한다.
            </summary>
            <param name="sender"></param>
        </member>
        <member name="M:SocketServerTest.ServerForm.UserList_FindUser(DGSocketAssist2_Server.ClientListener)">
            <summary>
            지정한 클라이언트 리스너와 동일한 유저를 찾아 리턴한다.
            </summary>
            <param name="sender"></param>
            <returns></returns>
        </member>
        <member name="M:SocketServerTest.ServerForm.#ctor">
            <summary>
            서버 UI폼 생성
            </summary>
        </member>
        <member name="M:SocketServerTest.ServerForm.btnStart_Click(System.Object,System.EventArgs)">
            <summary>
            서버 시작
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SocketServerTest.ServerForm.btnSend_Click(System.Object,System.EventArgs)">
            <summary>
            접속중인 모든 클라이언트에게 메시지를 전달함.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SocketServerTest.ServerForm.BtnDisplay(System.Boolean)">
            <summary>
            버튼을 화면에 표시하거나 가린다.
            </summary>
            <param name="bView"></param>
        </member>
        <member name="M:SocketServerTest.ServerForm.DisplayLog(System.String)">
            <summary>
            받아온 메시지를 출력 한다.
            </summary>
            <param name="nMessage"></param>
        </member>
        <member name="M:SocketServerTest.ServerForm.ServerForm_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            폼이 닫치기 전에 발생
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SocketServerTest.ServerForm.Server_OnStart">
            <summary>
            서버 이벤트 콜백 - 서버가 시작됨
            </summary>
        </member>
        <member name="M:SocketServerTest.ServerForm.Server_OnStop">
            <summary>
            서버 이벤트 콜백 - 서버가 멈춤
            </summary>
        </member>
        <member name="M:SocketServerTest.ServerForm.Server_OnConnected(DGSocketAssist2_Server.ClientListener)">
            <summary>
            서버 이벤트 콜백 - 클라이언트 연결됨
            </summary>
            <param name="sender"></param>
        </member>
        <member name="M:SocketServerTest.ServerForm.Server_ValidationComplete(DGSocketAssist2_Server.ClientListener)">
            <summary>
            서버 이벤트 콜백 - 클라이언트 허가됨
            </summary>
            <param name="sender"></param>
        </member>
        <member name="M:SocketServerTest.ServerForm.Server_OnDisconnected(DGSocketAssist2_Server.ClientListener)">
            <summary>
            서버 이벤트 콜백 - 클라이언트 끊김
            </summary>
            <param name="sender"></param>
        </member>
        <member name="M:SocketServerTest.ServerForm.Server_OnMessaged(DGSocketAssist2_Server.ClientListener,System.Byte[])">
            <summary>
            서버 이벤트 콜백 - 클라이언트 메시지
            </summary>
            <param name="sender"></param>
            <param name="byteMessage"></param>
        </member>
        <member name="M:SocketServerTest.ServerForm.NewUser_OnUserReady(SocketServerTest.User)">
            <summary>
            유저 개체가 준비됨
            </summary>
            <param name="sender"></param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:SocketServerTest.ServerForm.NewUser_OnMessaged(SocketServerTest.User,SocketServerTest.MessageEventArgs)">
            <summary>
            유저가 서버에 알리는 메시지 이벤트
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:SocketServerTest.ServerForm.NewUser_OnLoginComplet(SocketServerTest.User)">
            <summary>
            유저 로그인 완료.
            로그인 완료된 유저를 UI에 표시하고,
            기존 접속자들에게 다른 유저 접속 알린다.
            </summary>
            <param name="sender"></param>
        </member>
        <member name="M:SocketServerTest.ServerForm.NewUser_OnDisconnectCompleted(SocketServerTest.User)">
            <summary>
            유저의 끊김 처리가 시작되었다.
            </summary>
            <param name="sender"></param>
        </member>
        <member name="M:SocketServerTest.ServerForm.Commd_SendMsg(System.String,SocketServerTest.User)">
            <summary>
            명령 처리 - 메시지 보내기
            </summary>
            <param name="sMsg"></param>
            <param name="sender">호출자. 호출자한테도 보내고 싶으면 null로 보낸다</param>
        </member>
        <member name="M:SocketServerTest.ServerForm.Commd_IDCheck(SocketServerTest.User,System.String)">
            <summary>
            명령 처리 - ID체크
            </summary>
            <param name="insUser"></param>
            <param name="sID"></param>
        </member>
        <member name="M:SocketServerTest.ServerForm.Commd_User_List_Get(SocketServerTest.User)">
            <summary>
            명령 처리 - 유저 리스트 갱신 요청
            </summary>
            <param name="insUser"></param>
        </member>
        <member name="M:SocketServerTest.ServerForm.AllUser_Send(ChatGlobal.ChatCommandType,System.Byte[],SocketServerTest.User)">
            <summary>
            접속중인 모든 유저에게 메시지를 보낸다
            </summary>
            <param name="typeChatCommand"></param>
            <param name="byteData"></param>
            <param name="user">제외할 유저. 없으면 null</param>
        </member>
        <member name="M:SocketServerTest.ServerForm.AllUser_Send(System.Byte[],SocketServerTest.User)">
            <summary>
            접속중인 모든 유저에게 메시지를 보낸다<br />
            이미 체팅명령 헤더가 붙은 경우 이것으로 메시지를 보낸다.
            </summary>
            <param name="byteData"></param>
            <param name="user">제외할 유저. 없으면 null</param>
        </member>
        <member name="F:SocketServerTest.ServerForm.components">
            <summary>
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:SocketServerTest.ServerForm.Dispose(System.Boolean)">
            <summary>
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:SocketServerTest.ServerForm.InitializeComponent">
            <summary>
            디자이너 지원에 필요한 메서드입니다. 
            이 메서드의 내용을 코드 편집기로 수정하지 마세요.
            </summary>
        </member>
        <member name="T:SocketServerTest.GloblaStatic">
            <summary>
            프로그램 변수
            </summary>
        </member>
        <member name="F:SocketServerTest.GloblaStatic.MainForm">
            <summary>
            사용할 메인폼
            </summary>
        </member>
        <member name="F:SocketServerTest.GloblaStatic.Server">
            <summary>
            서버 동작을 할 리스너
            </summary>
        </member>
        <member name="F:SocketServerTest.GloblaStatic.ChatCmd">
            <summary>
            체팅 명령어 처리 유틸
            </summary>
        </member>
        <member name="M:SocketServerTest.Program.Main">
            <summary>
            해당 애플리케이션의 주 진입점입니다.
            </summary>
        </member>
        <member name="T:SocketServerTest.User">
            <summary>
            리스트로 관리될 유저 모델
            </summary>
        </member>
        <member name="T:SocketServerTest.User.UserReadyDelegate">
            <summary>
            유저 준비
            </summary>
            <param name="sender"></param>
        </member>
        <member name="E:SocketServerTest.User.OnUserReady">
            <summary>
            유저 준비
            </summary>
        </member>
        <member name="M:SocketServerTest.User.UserReadyCall">
            <summary>
            유저 준비가 완료되었음을 외부에 알림
            </summary>
        </member>
        <member name="T:SocketServerTest.User.MessageDelegate">
            <summary>
            유저 메시지 요청
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="E:SocketServerTest.User.OnMessaged">
            <summary>
            메시지
            </summary>
        </member>
        <member name="T:SocketServerTest.User.LoginCompletDelegate">
            <summary>
            유저 로그인 완료
            </summary>
            <param name="sender"></param>
        </member>
        <member name="E:SocketServerTest.User.OnLoginComplet">
            <summary>
            유저 로그인 완료되면 발생함
            </summary>
        </member>
        <member name="T:SocketServerTest.User.DisconnectCompletedDelegate">
            <summary>
            클라이언트 끊김 처리 완료
            </summary>
            <param name="sender"></param>
        </member>
        <member name="E:SocketServerTest.User.OnDisconnectCompleted">
            <summary>
            클라이언트가 끊김처리가 완료 되었다.
            </summary>
        </member>
        <member name="M:SocketServerTest.User.DisconnectCompletedCall">
            <summary>
            클라이언트 끊김 처리 완료되었음을 외부에 알림
            </summary>
        </member>
        <member name="P:SocketServerTest.User.ClientListenerMe">
            <summary>
            이 유저의 클라이언트 리스너 개체
            </summary>
        </member>
        <member name="P:SocketServerTest.User.UserID">
            <summary>
            이 유저의 아이디
            </summary>
        </member>
        <member name="M:SocketServerTest.User.#ctor(DGSocketAssist2_Server.ClientListener)">
            <summary>
            유저 객체를 생성합니다.
            </summary>
            <param name="newClientListener">접속된 클라이언트의 리스너 개체</param>
        </member>
        <member name="M:SocketServerTest.User.SendMeg_Main(System.String,ChatGlobal.ChatCommandType)">
            <summary>
            서버로 메시지를 보냅니다.
            </summary>
            <param name="sMag"></param>
            <param name="typeCommand"></param>
        </member>
        <member name="M:SocketServerTest.User.SendMsg_User(ChatGlobal.ChatCommandType,System.Byte[])">
            <summary>
            이 유저에게 체팅 명령 문자열을 만들어 메시지를 보낸다.
            </summary>
            <param name="typeChatCommand"></param>
            <param name="byteData"></param>
        </member>
        <member name="M:SocketServerTest.User.SendMsg_User(ChatGlobal.ChatCommandType,System.String)">
            <summary>
            이 유저에게 메시지를 보낸다.
            </summary>
            <param name="typeChatCommand"></param>
            <param name="sMsg"></param>
        </member>
        <member name="M:SocketServerTest.User.SendMsg_User(System.Byte[])">
            <summary>
            이 유저에게 메시지를 보낸다.<br />
            이미 체팅명령 헤더가 붙은 경우 이것으로 메시지를 보낸다.
            </summary>
            <param name="byteData"></param>
        </member>
        <member name="M:SocketServerTest.User.Disconnect">
            <summary>
            이 유저를 끊는다.
            </summary>
        </member>
        <member name="T:SocketServerTest.Properties.Resources">
            <summary>
              지역화된 문자열 등을 찾기 위한 강력한 형식의 리소스 클래스입니다.
            </summary>
        </member>
        <member name="P:SocketServerTest.Properties.Resources.ResourceManager">
            <summary>
              이 클래스에서 사용하는 캐시된 ResourceManager 인스턴스를 반환합니다.
            </summary>
        </member>
        <member name="P:SocketServerTest.Properties.Resources.Culture">
            <summary>
              이 강력한 형식의 리소스 클래스를 사용하여 모든 리소스 조회에 대해 현재 스레드의 CurrentUICulture 속성을
              재정의합니다.
            </summary>
        </member>
    </members>
</doc>
